//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProjetDotnetFramework.Api.LogoFinder {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OnDemand.Image", Namespace="http://schemas.datacontract.org/2004/07/DieseLibrary")]
    [System.SerializableAttribute()]
    public partial class OnDemandImage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProjetDotnetFramework.Api.LogoFinder.OnDemandData dataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProjetDotnetFramework.Api.LogoFinder.OnDemandProcessTime2 processTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProjetDotnetFramework.Api.LogoFinder.OnDemandData data {
            get {
                return this.dataField;
            }
            set {
                if ((object.ReferenceEquals(this.dataField, value) != true)) {
                    this.dataField = value;
                    this.RaisePropertyChanged("data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProjetDotnetFramework.Api.LogoFinder.OnDemandProcessTime2 processTime {
            get {
                return this.processTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.processTimeField, value) != true)) {
                    this.processTimeField = value;
                    this.RaisePropertyChanged("processTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OnDemand.Data", Namespace="http://schemas.datacontract.org/2004/07/DieseLibrary")]
    [System.SerializableAttribute()]
    public partial class OnDemandData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProjetDotnetFramework.Api.LogoFinder.OnDemandDetection[] detectionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProjetDotnetFramework.Api.LogoFinder.OnDemandProcessTime processTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sessionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int statusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProjetDotnetFramework.Api.LogoFinder.OnDemandDetection[] detections {
            get {
                return this.detectionsField;
            }
            set {
                if ((object.ReferenceEquals(this.detectionsField, value) != true)) {
                    this.detectionsField = value;
                    this.RaisePropertyChanged("detections");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProjetDotnetFramework.Api.LogoFinder.OnDemandProcessTime processTime {
            get {
                return this.processTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.processTimeField, value) != true)) {
                    this.processTimeField = value;
                    this.RaisePropertyChanged("processTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sessionId {
            get {
                return this.sessionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.sessionIdField, value) != true)) {
                    this.sessionIdField = value;
                    this.RaisePropertyChanged("sessionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int status {
            get {
                return this.statusField;
            }
            set {
                if ((this.statusField.Equals(value) != true)) {
                    this.statusField = value;
                    this.RaisePropertyChanged("status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OnDemand.ProcessTime2", Namespace="http://schemas.datacontract.org/2004/07/DieseLibrary")]
    [System.SerializableAttribute()]
    public partial class OnDemandProcessTime2 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int timeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string unitField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int time {
            get {
                return this.timeField;
            }
            set {
                if ((this.timeField.Equals(value) != true)) {
                    this.timeField = value;
                    this.RaisePropertyChanged("time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string unit {
            get {
                return this.unitField;
            }
            set {
                if ((object.ReferenceEquals(this.unitField, value) != true)) {
                    this.unitField = value;
                    this.RaisePropertyChanged("unit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OnDemand.ProcessTime", Namespace="http://schemas.datacontract.org/2004/07/DieseLibrary")]
    [System.SerializableAttribute()]
    public partial class OnDemandProcessTime : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double timeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string unitField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double time {
            get {
                return this.timeField;
            }
            set {
                if ((this.timeField.Equals(value) != true)) {
                    this.timeField = value;
                    this.RaisePropertyChanged("time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string unit {
            get {
                return this.unitField;
            }
            set {
                if ((object.ReferenceEquals(this.unitField, value) != true)) {
                    this.unitField = value;
                    this.RaisePropertyChanged("unit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OnDemand.Detection", Namespace="http://schemas.datacontract.org/2004/07/DieseLibrary")]
    [System.SerializableAttribute()]
    public partial class OnDemandDetection : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double areaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double areaPercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double[] coordinatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string iconUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double[] validationFlagsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double area {
            get {
                return this.areaField;
            }
            set {
                if ((this.areaField.Equals(value) != true)) {
                    this.areaField = value;
                    this.RaisePropertyChanged("area");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double areaPercentage {
            get {
                return this.areaPercentageField;
            }
            set {
                if ((this.areaPercentageField.Equals(value) != true)) {
                    this.areaPercentageField = value;
                    this.RaisePropertyChanged("areaPercentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double[] coordinates {
            get {
                return this.coordinatesField;
            }
            set {
                if ((object.ReferenceEquals(this.coordinatesField, value) != true)) {
                    this.coordinatesField = value;
                    this.RaisePropertyChanged("coordinates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string iconUrl {
            get {
                return this.iconUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.iconUrlField, value) != true)) {
                    this.iconUrlField = value;
                    this.RaisePropertyChanged("iconUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string size {
            get {
                return this.sizeField;
            }
            set {
                if ((object.ReferenceEquals(this.sizeField, value) != true)) {
                    this.sizeField = value;
                    this.RaisePropertyChanged("size");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double[] validationFlags {
            get {
                return this.validationFlagsField;
            }
            set {
                if ((object.ReferenceEquals(this.validationFlagsField, value) != true)) {
                    this.validationFlagsField = value;
                    this.RaisePropertyChanged("validationFlags");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/ImageService")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LogoFinder.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ImageUri", ReplyAction="http://tempuri.org/IService1/ImageUriResponse")]
        ProjetDotnetFramework.Api.LogoFinder.OnDemandImage ImageUri(string uri, bool datamatrix);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ImageUri", ReplyAction="http://tempuri.org/IService1/ImageUriResponse")]
        System.Threading.Tasks.Task<ProjetDotnetFramework.Api.LogoFinder.OnDemandImage> ImageUriAsync(string uri, bool datamatrix);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DrawOnImage", ReplyAction="http://tempuri.org/IService1/DrawOnImageResponse")]
        System.Drawing.Bitmap DrawOnImage(ProjetDotnetFramework.Api.LogoFinder.OnDemandImage imageCoord, string uri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DrawOnImage", ReplyAction="http://tempuri.org/IService1/DrawOnImageResponse")]
        System.Threading.Tasks.Task<System.Drawing.Bitmap> DrawOnImageAsync(ProjetDotnetFramework.Api.LogoFinder.OnDemandImage imageCoord, string uri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        ProjetDotnetFramework.Api.LogoFinder.CompositeType GetDataUsingDataContract(ProjetDotnetFramework.Api.LogoFinder.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<ProjetDotnetFramework.Api.LogoFinder.CompositeType> GetDataUsingDataContractAsync(ProjetDotnetFramework.Api.LogoFinder.CompositeType composite);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : ProjetDotnetFramework.Api.LogoFinder.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<ProjetDotnetFramework.Api.LogoFinder.IService1>, ProjetDotnetFramework.Api.LogoFinder.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ProjetDotnetFramework.Api.LogoFinder.OnDemandImage ImageUri(string uri, bool datamatrix) {
            return base.Channel.ImageUri(uri, datamatrix);
        }
        
        public System.Threading.Tasks.Task<ProjetDotnetFramework.Api.LogoFinder.OnDemandImage> ImageUriAsync(string uri, bool datamatrix) {
            return base.Channel.ImageUriAsync(uri, datamatrix);
        }
        
        public System.Drawing.Bitmap DrawOnImage(ProjetDotnetFramework.Api.LogoFinder.OnDemandImage imageCoord, string uri) {
            return base.Channel.DrawOnImage(imageCoord, uri);
        }
        
        public System.Threading.Tasks.Task<System.Drawing.Bitmap> DrawOnImageAsync(ProjetDotnetFramework.Api.LogoFinder.OnDemandImage imageCoord, string uri) {
            return base.Channel.DrawOnImageAsync(imageCoord, uri);
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public ProjetDotnetFramework.Api.LogoFinder.CompositeType GetDataUsingDataContract(ProjetDotnetFramework.Api.LogoFinder.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<ProjetDotnetFramework.Api.LogoFinder.CompositeType> GetDataUsingDataContractAsync(ProjetDotnetFramework.Api.LogoFinder.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
    }
}
